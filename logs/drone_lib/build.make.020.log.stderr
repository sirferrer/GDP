[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Data.cpp:[m[K In constructor â€˜[01m[Kdata::data(int, char**, float)[m[Kâ€™:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Data.cpp:10:113:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kvoid data::altitude_cb(const ConstPtr&)[m[Kâ€™
     ros::Subscriber altitude_sub = nh.subscribe<mavros_msgs::Altitude>("/mavros/altitude", 10, data::altitude_cb[01;31m[K)[m[K;
                                                                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Data.cpp:1:0[m[K:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/data.h:16:10:[m[K [01;36m[Knote: [m[Kdeclared here
     void [01;36m[Kaltitude_cb[m[K(const mavros_msgs::Altitude::ConstPtr &msg);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Data.cpp:13:126:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kvoid data::heading_cb(const ConstPtr&)[m[Kâ€™
     ros::Subscriber compass_sub = nh.subscribe<std_msgs::Float64>("/mavros/global_position/compass_hdg", 10, data::heading_cb[01;31m[K)[m[K;
                                                                                                                              [01;31m[K^[m[K
In file included from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Data.cpp:1:0[m[K:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/data.h:17:10:[m[K [01;36m[Knote: [m[Kdeclared here
     void [01;36m[Kheading_cb[m[K(const std_msgs::Float64::ConstPtr &msg);
          [01;36m[K^~~~~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:6:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGDPdrone::GDPdrone[m[Kâ€™ names the constructor, not the type
     [01;31m[KGDPdrone[m[K::GDPdrone drone(argc, argv, rate);
     [01;31m[K^~~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:6:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kdrone[m[Kâ€™
     GDPdrone::GDPdrone [01;31m[Kdrone[m[K(argc, argv, rate);
                        [01;31m[K^~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:6:47:[m[K [01;31m[Kerror: [m[Kstatement cannot resolve address of overloaded function
     GDPdrone::GDPdrone drone(argc, argv, rate)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:7:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdrone[m[Kâ€™ was not declared in this scope
     [01;31m[Kdrone[m[K.Commands.await_Connection();
     [01;31m[K^~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/LibTest.cpp:7:5:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kclone[m[Kâ€™
     [01;36m[Kdrone[m[K.Commands.await_Connection();
     [01;36m[K^~~~~[m[K
     [32m[Kclone[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:[m[K In constructor â€˜[01m[Kcommands::commands(int, char**, float)[m[Kâ€™:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:28:104:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kvoid commands::state_cb(const ConstPtr&)[m[Kâ€™
     ros::Subscriber state_sub = nh.subscribe<mavros_msgs::State>("mavros/state", 10, commands::state_cb[01;31m[K)[m[K;
                                                                                                        [01;31m[K^[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:12:6:[m[K [01;36m[Knote: [m[Kdeclared here
 void [01;36m[Kcommands[m[K::state_cb(const mavros_msgs::State::ConstPtr &msg)
      [01;36m[K^~~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:29:134:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kvoid commands::ext_state_cb(const ConstPtr&)[m[Kâ€™
     ros::Subscriber state_sub_ext = nh.subscribe<mavros_msgs::ExtendedState>("mavros_msgs/extended_state", 10, commands::ext_state_cb[01;31m[K)[m[K;
                                                                                                                                      [01;31m[K^[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:6:6:[m[K [01;36m[Knote: [m[Kdeclared here
 void [01;36m[Kcommands[m[K::ext_state_cb(const mavros_msgs::ExtendedState::ConstPtr &msg)
      [01;36m[K^~~~~~~~[m[K
In file included from [01m[K/opt/ros/melodic/include/ros/ros.h:40:0[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/commands.h:4[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:1[m[K:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:[m[K In member function â€˜[01m[Kvoid commands::set_Mode(std::__cxx11::string)[m[Kâ€™:
[01m[K/opt/ros/melodic/include/ros/console.h:348:176:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 8 has type â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__[01;35m[K)[m[K
                                                                                                                                                                                [01;35m[K^[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:351:5:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     [01;36m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[K(NULL, __VA_ARGS__)
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:387:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       [01;36m[KROSCONSOLE_PRINT_AT_LOCATION[m[K(__VA_ARGS__); \
       [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:572:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) [01;36m[KROS_LOG_COND[m[K(true, level, name, __VA_ARGS__)
                                   [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) [01;36m[KROS_LOG[m[K(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
                       [01;36m[K^~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:112:17:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
                 [01;36m[KR[m[KOS_INFO("%s enabled", _mode);
                 [01;36m[K^[m[K
make[2]: *** [CMakeFiles/drone_node.dir/src/Data.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
make[2]: *** [CMakeFiles/drone_node.dir/src/LibTest.cpp.o] Error 1
make[2]: *** [CMakeFiles/drone_node.dir/src/Commands.cpp.o] Error 1
make[1]: *** [CMakeFiles/drone_node.dir/all] Error 2
make: *** [all] Error 2
