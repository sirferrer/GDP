In file included from [01m[K/opt/ros/melodic/include/ros/ros.h:40:0[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/commands.h:4[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:1[m[K:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:[m[K In member function â€˜[01m[Kvoid commands::set_Mode(std::__cxx11::string)[m[Kâ€™:
[01m[K/opt/ros/melodic/include/ros/console.h:348:176:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 8 has type â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__[01;35m[K)[m[K
                                                                                                                                                                                [01;35m[K^[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:351:5:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     [01;36m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[K(NULL, __VA_ARGS__)
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:387:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       [01;36m[KROSCONSOLE_PRINT_AT_LOCATION[m[K(__VA_ARGS__); \
       [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:572:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) [01;36m[KROS_LOG_COND[m[K(true, level, name, __VA_ARGS__)
                                   [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) [01;36m[KROS_LOG[m[K(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
                       [01;36m[K^~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:117:9:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
         [01;36m[KR[m[KOS_INFO("%s enabled", _mode);
         [01;36m[K^[m[K
In file included from [01m[K/usr/include/boost/mem_fn.hpp:22:0[m[K,
                 from [01m[K/usr/include/boost/function/detail/prologue.hpp:18[m[K,
                 from [01m[K/usr/include/boost/function.hpp:24[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/commands.h:4[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:1[m[K:
/usr/include/boost/bind/mem_fn.hpp: In instantiation of â€˜[01m[KR& boost::_mfi::dm<R, T>::operator()(T*) const [with R = void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&); T = commands][m[Kâ€™:
[01m[K/usr/include/boost/bind/bind.hpp:249:42:[m[K   required from â€˜[01m[KR boost::_bi::list1<A1>::operator()(boost::_bi::type<R>, F&, A&, long int) [with R = void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&); F = boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>; A = boost::_bi::rrlist1<const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&>; A1 = boost::_bi::value<commands*>][m[Kâ€™
[01m[K/usr/include/boost/bind/bind.hpp:1306:50:[m[K   required from â€˜[01m[Kboost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&) [with A1 = const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&; R = void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&); F = boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>; L = boost::_bi::list1<boost::_bi::value<commands*> >; boost::_bi::bind_t<R, F, L>::result_type = void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&)][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:159:11:[m[K   required from â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:925:38:[m[K   required from â€˜[01m[Kvoid boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:716:7:[m[K   required from â€˜[01m[Kboost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1061:16:[m[K   required from â€˜[01m[Kboost::function<R(T0)>::function(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:27:126:[m[K   required from here
[01m[K/usr/include/boost/bind/mem_fn.hpp:342:23:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function of type â€˜[01m[Kvoid (commands::)(const boost::shared_ptr<const mavros_msgs::State_<std::allocator<void> > >&)[m[Kâ€™
         return (p->*f_[01;31m[K)[m[K;
                       [01;31m[K^[m[K
/usr/include/boost/bind/mem_fn.hpp: In instantiation of â€˜[01m[KR& boost::_mfi::dm<R, T>::operator()(T*) const [with R = void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&); T = commands][m[Kâ€™:
[01m[K/usr/include/boost/bind/bind.hpp:249:42:[m[K   required from â€˜[01m[KR boost::_bi::list1<A1>::operator()(boost::_bi::type<R>, F&, A&, long int) [with R = void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&); F = boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>; A = boost::_bi::rrlist1<const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&>; A1 = boost::_bi::value<commands*>][m[Kâ€™
[01m[K/usr/include/boost/bind/bind.hpp:1306:50:[m[K   required from â€˜[01m[Kboost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&) [with A1 = const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&; R = void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&); F = boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>; L = boost::_bi::list1<boost::_bi::value<commands*> >; boost::_bi::bind_t<R, F, L>::result_type = void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&)][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:159:11:[m[K   required from â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:925:38:[m[K   required from â€˜[01m[Kvoid boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:716:7:[m[K   required from â€˜[01m[Kboost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1061:16:[m[K   required from â€˜[01m[Kboost::function<R(T0)>::function(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<void (&)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), boost::_mfi::dm<void(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&), commands>, boost::_bi::list1<boost::_bi::value<commands*> > >; R = void; T0 = const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:28:154:[m[K   required from here
[01m[K/usr/include/boost/bind/mem_fn.hpp:342:23:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function of type â€˜[01m[Kvoid (commands::)(const boost::shared_ptr<const mavros_msgs::ExtendedState_<std::allocator<void> > >&)[m[Kâ€™
make[2]: *** [CMakeFiles/drone_node.dir/src/Commands.cpp.o] Error 1
make[1]: *** [CMakeFiles/drone_node.dir/all] Error 2
make: *** [all] Error 2
