[35m[1mScanning dependencies of target drone_node[0m
[ 16%] [32mBuilding CXX object CMakeFiles/drone_node.dir/src/Commands.cpp.o[0m
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:[m[K In constructor â€˜[01m[Kcommands::commands(ros::NodeHandle, ros::Rate)[m[Kâ€™:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:27:94:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kvoid commands::state_cb(const ConstPtr&)[m[Kâ€™
     ros::Subscriber state_sub = nh.subscribe<mavros_msgs::State>("mavros/state", 10, state_cb[01;31m[K)[m[K;
                                                                                              [01;31m[K^[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:12:6:[m[K [01;36m[Knote: [m[Kdeclared here
 void [01;36m[Kcommands[m[K::state_cb(const mavros_msgs::State::ConstPtr& msg)
      [01;36m[K^~~~~~~~[m[K
In file included from [01m[K/opt/ros/melodic/include/ros/ros.h:40:0[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/headers/commands.h:4[m[K,
                 from [01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:1[m[K:
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:[m[K In member function â€˜[01m[Kvoid commands::set_Mode(std::__cxx11::string)[m[Kâ€™:
[01m[K/opt/ros/melodic/include/ros/console.h:348:176:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 8 has type â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__[01;35m[K)[m[K
                                                                                                                                                                                [01;35m[K^[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:351:5:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     [01;36m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[K(NULL, __VA_ARGS__)
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:387:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       [01;36m[KROSCONSOLE_PRINT_AT_LOCATION[m[K(__VA_ARGS__); \
       [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/ros/console.h:572:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) [01;36m[KROS_LOG_COND[m[K(true, level, name, __VA_ARGS__)
                                   [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) [01;36m[KROS_LOG[m[K(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
                       [01;36m[K^~~~~~~[m[K
[01m[K/home/pablo/GDP_Git/src/drone_lib/src/Commands.cpp:117:9:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
         [01;36m[KR[m[KOS_INFO("%s enabled", _mode);
         [01;36m[K^[m[K
CMakeFiles/drone_node.dir/build.make:110: recipe for target 'CMakeFiles/drone_node.dir/src/Commands.cpp.o' failed
make[2]: *** [CMakeFiles/drone_node.dir/src/Commands.cpp.o] Error 1
CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/drone_node.dir/all' failed
make[1]: *** [CMakeFiles/drone_node.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make: *** [all] Error 2
